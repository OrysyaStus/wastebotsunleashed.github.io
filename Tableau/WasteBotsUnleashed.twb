<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10200.17.0216.1925                               -->
<workbook source-build='10.2.0 (10200.17.0216.1925)' source-platform='win' version='10.2' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <repository-location id='WasteBotsUnleased' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='For_Tableau' inline='true' name='federated.0zslbn10zexr0o1cdrm5f005rkda' version='10.2'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='For_Tableau' name='textscan.1v9nxc71ltls2714q8j9406grewv'>
            <connection class='textscan' directory='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/Tableau_Data' filename='For_Tableau.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='STR([For_Tableau.csv].[lats])+&apos;,&apos;+STR([For_Tableau.csv].[longs])' />
              <expression op='STR([opencv_output.csv].[latitude])+&apos;,&apos;+STR([opencv_output.csv].[longitude])' />
            </expression>
          </clause>
          <relation join='left' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='STR([For_Tableau.csv].[lats])+&apos;,&apos;+STR([For_Tableau.csv].[longs])' />
                <expression op='STR([littered_samples.csv].[latitude])+&apos;,&apos;+STR([littered_samples.csv].[longtitude])' />
              </expression>
            </clause>
            <relation join='left' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='STR([For_Tableau.csv].[lats])+&apos;,&apos;+STR([For_Tableau.csv].[longs])' />
                  <expression op='STR([blue_tarps.csv].[lat])+&apos;,&apos;+STR([blue_tarps.csv].[lon])' />
                </expression>
              </clause>
              <relation connection='textscan.1v9nxc71ltls2714q8j9406grewv' name='For_Tableau.csv' table='[For_Tableau#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='ADDRNMBR' ordinal='0' />
                  <column datatype='string' name='ADDRFRAC' ordinal='1' />
                  <column datatype='string' name='ADDRPDIR' ordinal='2' />
                  <column datatype='string' name='ADDRNAME' ordinal='3' />
                  <column datatype='string' name='ADDRPOSTD' ordinal='4' />
                  <column datatype='string' name='ADDRSFX' ordinal='5' />
                  <column datatype='string' name='ADDRUNIT' ordinal='6' />
                  <column datatype='string' name='ADDRJUR' ordinal='7' />
                  <column datatype='real' name='ADDRZIP' ordinal='8' />
                  <column datatype='integer' name='ROADSEGID' ordinal='9' />
                  <column datatype='real' name='APN' ordinal='10' />
                  <column datatype='string' name='ASOURCE' ordinal='11' />
                  <column datatype='real' name='X_COORD' ordinal='12' />
                  <column datatype='real' name='Y_COORD' ordinal='13' />
                  <column datatype='string' name='STATE' ordinal='14' />
                  <column datatype='string' name='PLACEMENT_' ordinal='15' />
                  <column datatype='string' name='COMMUNITY' ordinal='16' />
                  <column datatype='string' name='ADDRESS_TY' ordinal='17' />
                  <column datatype='integer' name='PARCELID' ordinal='18' />
                  <column datatype='string' name='USNG' ordinal='19' />
                  <column datatype='real' name='coords.x1' ordinal='20' />
                  <column datatype='real' name='coords.x2' ordinal='21' />
                  <column datatype='real' name='lats' ordinal='22' />
                  <column datatype='real' name='longs' ordinal='23' />
                </columns>
              </relation>
              <relation connection='textscan.1v9nxc71ltls2714q8j9406grewv' name='blue_tarps.csv' table='[blue_tarps#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='blue' ordinal='0' />
                  <column datatype='real' name='lat' ordinal='1' />
                  <column datatype='real' name='lon' ordinal='2' />
                </columns>
              </relation>
            </relation>
            <relation connection='textscan.1v9nxc71ltls2714q8j9406grewv' name='littered_samples.csv' table='[littered_samples#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                <column datatype='real' name='latitude' ordinal='0' />
                <column datatype='real' name='longtitude' ordinal='1' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.1v9nxc71ltls2714q8j9406grewv' name='opencv_output.csv' table='[opencv_output#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='real' name='latitude' ordinal='0' />
              <column datatype='real' name='longitude' ordinal='1' />
              <column datatype='integer' name='bin_graffiti' ordinal='2' />
              <column datatype='integer' name='bin_trashcan' ordinal='3' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[ADDRESS_TY]' value='[For_Tableau.csv].[ADDRESS_TY]' />
          <map key='[ADDRFRAC]' value='[For_Tableau.csv].[ADDRFRAC]' />
          <map key='[ADDRJUR]' value='[For_Tableau.csv].[ADDRJUR]' />
          <map key='[ADDRNAME]' value='[For_Tableau.csv].[ADDRNAME]' />
          <map key='[ADDRNMBR]' value='[For_Tableau.csv].[ADDRNMBR]' />
          <map key='[ADDRPDIR]' value='[For_Tableau.csv].[ADDRPDIR]' />
          <map key='[ADDRPOSTD]' value='[For_Tableau.csv].[ADDRPOSTD]' />
          <map key='[ADDRSFX]' value='[For_Tableau.csv].[ADDRSFX]' />
          <map key='[ADDRUNIT]' value='[For_Tableau.csv].[ADDRUNIT]' />
          <map key='[ADDRZIP]' value='[For_Tableau.csv].[ADDRZIP]' />
          <map key='[APN]' value='[For_Tableau.csv].[APN]' />
          <map key='[ASOURCE]' value='[For_Tableau.csv].[ASOURCE]' />
          <map key='[COMMUNITY]' value='[For_Tableau.csv].[COMMUNITY]' />
          <map key='[PARCELID]' value='[For_Tableau.csv].[PARCELID]' />
          <map key='[PLACEMENT_]' value='[For_Tableau.csv].[PLACEMENT_]' />
          <map key='[ROADSEGID]' value='[For_Tableau.csv].[ROADSEGID]' />
          <map key='[STATE]' value='[For_Tableau.csv].[STATE]' />
          <map key='[USNG]' value='[For_Tableau.csv].[USNG]' />
          <map key='[X_COORD]' value='[For_Tableau.csv].[X_COORD]' />
          <map key='[Y_COORD]' value='[For_Tableau.csv].[Y_COORD]' />
          <map key='[bin_graffiti]' value='[opencv_output.csv].[bin_graffiti]' />
          <map key='[bin_trashcan]' value='[opencv_output.csv].[bin_trashcan]' />
          <map key='[blue]' value='[blue_tarps.csv].[blue]' />
          <map key='[coords.x1]' value='[For_Tableau.csv].[coords.x1]' />
          <map key='[coords.x2]' value='[For_Tableau.csv].[coords.x2]' />
          <map key='[lat]' value='[blue_tarps.csv].[lat]' />
          <map key='[latitude (opencv_output.csv)]' value='[opencv_output.csv].[latitude]' />
          <map key='[latitude]' value='[littered_samples.csv].[latitude]' />
          <map key='[lats]' value='[For_Tableau.csv].[lats]' />
          <map key='[lon]' value='[blue_tarps.csv].[lon]' />
          <map key='[longitude]' value='[opencv_output.csv].[longitude]' />
          <map key='[longs]' value='[For_Tableau.csv].[longs]' />
          <map key='[longtitude]' value='[littered_samples.csv].[longtitude]' />
        </cols>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>ADDRNMBR</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ADDRNMBR]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>ADDRNMBR</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADDRFRAC</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ADDRFRAC]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>ADDRFRAC</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADDRPDIR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ADDRPDIR]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>ADDRPDIR</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADDRNAME</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ADDRNAME]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>ADDRNAME</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADDRPOSTD</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ADDRPOSTD]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>ADDRPOSTD</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADDRSFX</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ADDRSFX]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>ADDRSFX</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADDRUNIT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ADDRUNIT]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>ADDRUNIT</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADDRJUR</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ADDRJUR]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>ADDRJUR</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADDRZIP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ADDRZIP]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>ADDRZIP</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ROADSEGID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ROADSEGID]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>ROADSEGID</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>APN</remote-name>
            <remote-type>5</remote-type>
            <local-name>[APN]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>APN</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ASOURCE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ASOURCE]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>ASOURCE</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>X_COORD</remote-name>
            <remote-type>5</remote-type>
            <local-name>[X_COORD]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>X_COORD</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Y_COORD</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Y_COORD]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>Y_COORD</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PLACEMENT_</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PLACEMENT_]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>PLACEMENT_</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COMMUNITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COMMUNITY]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>COMMUNITY</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ADDRESS_TY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[ADDRESS_TY]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>ADDRESS_TY</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PARCELID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[PARCELID]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>PARCELID</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>USNG</remote-name>
            <remote-type>129</remote-type>
            <local-name>[USNG]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>USNG</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coords.x1</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coords.x1]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>coords.x1</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coords.x2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coords.x2]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>coords.x2</remote-alias>
            <ordinal>21</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lats</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lats]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>lats</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longs</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longs]</local-name>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias>longs</remote-alias>
            <ordinal>23</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[For_Tableau.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>blue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[blue]</local-name>
            <parent-name>[blue_tarps.csv]</parent-name>
            <remote-alias>blue</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[blue_tarps.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lon</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lon]</local-name>
            <parent-name>[blue_tarps.csv]</parent-name>
            <remote-alias>lon</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[blue_tarps.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[littered_samples.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>27</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longtitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longtitude]</local-name>
            <parent-name>[littered_samples.csv]</parent-name>
            <remote-alias>longtitude</remote-alias>
            <ordinal>28</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[littered_samples.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[latitude (opencv_output.csv)]</local-name>
            <parent-name>[opencv_output.csv]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>29</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[opencv_output.csv]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>30</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bin_graffiti</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bin_graffiti]</local-name>
            <parent-name>[opencv_output.csv]</parent-name>
            <remote-alias>bin_graffiti</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bin_trashcan</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bin_trashcan]</local-name>
            <parent-name>[opencv_output.csv]</parent-name>
            <remote-alias>bin_trashcan</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[opencv_output.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='record-delimiter'>&quot;\\r&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Address Ty' datatype='string' name='[ADDRESS_TY]' role='dimension' type='nominal' />
      <column caption='Addrfrac' datatype='string' name='[ADDRFRAC]' role='dimension' type='nominal' />
      <column caption='Addrjur' datatype='string' name='[ADDRJUR]' role='dimension' type='nominal' />
      <column caption='Addrname' datatype='string' name='[ADDRNAME]' role='dimension' type='nominal' />
      <column caption='Addrnmbr' datatype='integer' name='[ADDRNMBR]' role='measure' type='quantitative' />
      <column caption='Addrpdir' datatype='string' name='[ADDRPDIR]' role='dimension' type='nominal' />
      <column caption='Addrpostd' datatype='string' name='[ADDRPOSTD]' role='dimension' type='nominal' />
      <column caption='Addrsfx' datatype='string' name='[ADDRSFX]' role='dimension' type='nominal' />
      <column caption='Addrunit' datatype='string' name='[ADDRUNIT]' role='dimension' type='nominal' />
      <column caption='Addrzip' datatype='real' default-format='*00000' name='[ADDRZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Asource' datatype='string' name='[ASOURCE]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Blue 1 Tarp Counts (copy)]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([lats] == 1)' />
      </column>
      <column caption='Community' datatype='string' name='[COMMUNITY]' role='dimension' type='nominal' />
      <column caption='Blue 1 Tarp Counts' datatype='integer' name='[Calculation_680043611195772928]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE [blue] == 1 : COUNT([lats])}' />
      </column>
      <column caption='Color Distribution URL' datatype='string' name='[Calculation_680043611209191425]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&apos;https://www.dropbox.com/s/xh9ulinsppcf07f/&apos;+STR([lat])+&apos;%2C%20&apos;+STR([lon])+&apos;.jpg?dl=0&apos;' />
      </column>
      <column caption='Blue == 1 per Zipcode' datatype='real' name='[Calculation_680043611213959170]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{FIXED [ADDRZIP]: SUM([blue])/(SUM([Number of Records]))}' />
      </column>
      <column caption='Street View URL' datatype='string' name='[Calculation_736338605860278272]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;https://maps.googleapis.com/maps/api/streetview?size=1200x800&amp;location=&quot;+STR([lats])+&quot;,&quot;+STR([longs])' />
      </column>
      <column caption='BT lat, long' datatype='string' name='[Calculation_736338606174306307]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR([lat])+&apos;,&apos;+STR([lon])' />
      </column>
      <column aggregation='Avg' caption='Blue Lat' datatype='real' name='[Lat (copy)]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative'>
        <calculation class='tableau' formula='[lat]' />
      </column>
      <column caption='Lats Filter' datatype='string' datatype-customized='true' name='[Lats (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR([lats])' />
      </column>
      <column aggregation='Avg' caption='Blue Lon' datatype='real' name='[Lon (copy 2)]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative'>
        <calculation class='tableau' formula='[lon]' />
      </column>
      <column caption='Lon_exclude' datatype='string' datatype-customized='true' name='[Lon (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR([lon])' />
      </column>
      <column caption='Longs Filter' datatype='string' datatype-customized='true' name='[Longs (copy)]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='STR([longs])' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Parcelid' datatype='integer' name='[PARCELID]' role='measure' type='quantitative' />
      <column caption='Placement' datatype='string' name='[PLACEMENT_]' role='dimension' type='nominal' />
      <column caption='Roadsegid' datatype='integer' name='[ROADSEGID]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Usng' datatype='string' name='[USNG]' role='dimension' type='nominal' />
      <column caption='X Coord' datatype='real' name='[X_COORD]' role='measure' type='quantitative' />
      <column caption='Y Coord' datatype='real' name='[Y_COORD]' role='measure' type='quantitative' />
      <column caption='Bin Graffiti' datatype='integer' name='[bin_graffiti]' role='measure' type='quantitative' />
      <column caption='Bin Trashcan' datatype='integer' name='[bin_trashcan]' role='measure' type='quantitative' />
      <column caption='Blue' datatype='integer' name='[blue]' role='measure' type='quantitative' />
      <column caption='Coords.X1' datatype='real' name='[coords.x1]' role='measure' type='quantitative' />
      <column caption='Coords.X2' datatype='real' name='[coords.x2]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Latitude (Opencv Output.Csv)' datatype='real' name='[latitude (opencv_output.csv)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Lats' datatype='real' name='[lats]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Lon' datatype='real' name='[lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longs' datatype='real' name='[longs]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Longtitude' datatype='real' name='[longtitude]' role='measure' type='quantitative' />
      <column-instance column='[blue]' derivation='Attribute' name='[attr:blue:ok]' pivot='key' type='ordinal' />
      <column-instance column='[lats]' derivation='None' name='[none:lats:ok]' pivot='key' type='ordinal' />
      <column-instance column='[longs]' derivation='None' name='[none:longs:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Street View URL,Lats,Longs)' hidden='true' name='[Action (Street View URL,Lats,Longs)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Calculation_736338605860278272]' />
          <groupfilter function='level-members' level='[none:lats:ok]' />
          <groupfilter function='level-members' level='[none:longs:ok]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Data/WasteBotsUnleased.twb Files/federated.0zslbn10zexr0o1cdrm5f005rkda.tde' schema='Extract' tablename='Extract' update-time='04/22/2017 10:41:02 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[ADDRESS_TY]' value='[Extract].[ADDRESS_TY]' />
            <map key='[ADDRFRAC]' value='[Extract].[ADDRFRAC]' />
            <map key='[ADDRJUR]' value='[Extract].[ADDRJUR]' />
            <map key='[ADDRNAME]' value='[Extract].[ADDRNAME]' />
            <map key='[ADDRNMBR]' value='[Extract].[ADDRNMBR]' />
            <map key='[ADDRPDIR]' value='[Extract].[ADDRPDIR]' />
            <map key='[ADDRPOSTD]' value='[Extract].[ADDRPOSTD]' />
            <map key='[ADDRSFX]' value='[Extract].[ADDRSFX]' />
            <map key='[ADDRUNIT]' value='[Extract].[ADDRUNIT]' />
            <map key='[ADDRZIP]' value='[Extract].[ADDRZIP]' />
            <map key='[APN]' value='[Extract].[APN]' />
            <map key='[ASOURCE]' value='[Extract].[ASOURCE]' />
            <map key='[COMMUNITY]' value='[Extract].[COMMUNITY]' />
            <map key='[Calculation_680043611209191425]' value='[Extract].[Calculation_680043611209191425]' />
            <map key='[Calculation_736338605860278272]' value='[Extract].[Calculation_736338605860278272]' />
            <map key='[Calculation_736338606174306307]' value='[Extract].[Calculation_736338606174306307]' />
            <map key='[Lat (copy)]' value='[Extract].[Lat (copy)]' />
            <map key='[Lats (copy)]' value='[Extract].[Lats (copy)]' />
            <map key='[Lon (copy 2)]' value='[Extract].[Lon (copy 2)]' />
            <map key='[Lon (copy)]' value='[Extract].[Lon (copy)]' />
            <map key='[Longs (copy)]' value='[Extract].[Longs (copy)]' />
            <map key='[Number of Records]' value='[Extract].[Number of Records]' />
            <map key='[PARCELID]' value='[Extract].[PARCELID]' />
            <map key='[PLACEMENT_]' value='[Extract].[PLACEMENT_]' />
            <map key='[ROADSEGID]' value='[Extract].[ROADSEGID]' />
            <map key='[STATE]' value='[Extract].[STATE]' />
            <map key='[USNG]' value='[Extract].[USNG]' />
            <map key='[X_COORD]' value='[Extract].[X_COORD]' />
            <map key='[Y_COORD]' value='[Extract].[Y_COORD]' />
            <map key='[bin_graffiti]' value='[Extract].[bin_graffiti]' />
            <map key='[bin_trashcan]' value='[Extract].[bin_trashcan]' />
            <map key='[blue]' value='[Extract].[blue]' />
            <map key='[coords.x1]' value='[Extract].[coords.x1]' />
            <map key='[coords.x2]' value='[Extract].[coords.x2]' />
            <map key='[lat]' value='[Extract].[lat]' />
            <map key='[latitude (opencv_output.csv)]' value='[Extract].[latitude]' />
            <map key='[latitude]' value='[Extract].[latitude1]' />
            <map key='[lats]' value='[Extract].[lats]' />
            <map key='[lon]' value='[Extract].[lon]' />
            <map key='[longitude]' value='[Extract].[longitude]' />
            <map key='[longs]' value='[Extract].[longs]' />
            <map key='[longtitude]' value='[Extract].[longtitude]' />
          </cols>
          <calculations>
            <calculation column='[Calculation_680043611209191425]' formula='&apos;https://www.dropbox.com/s/xh9ulinsppcf07f/&apos;+STR([lat])+&apos;%2C%20&apos;+STR([lon])+&apos;.jpg?dl=0&apos;' />
            <calculation column='[Calculation_736338605860278272]' formula='&quot;https://maps.googleapis.com/maps/api/streetview?size=1200x800&amp;location=&quot;+STR([lats])+&quot;,&quot;+STR([longs])' />
            <calculation column='[Calculation_736338606174306307]' formula='STR([lat])+&apos;,&apos;+STR([lon])' />
            <calculation column='[Lat (copy)]' formula='[lat]' />
            <calculation column='[Lats (copy)]' formula='STR([lats])' />
            <calculation column='[Lon (copy 2)]' formula='[lon]' />
            <calculation column='[Lon (copy)]' formula='STR([lon])' />
            <calculation column='[Longs (copy)]' formula='STR([longs])' />
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='1150057' timestamp-start='2017-04-22 22:41:02.474' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>ADDRESS_TY</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ADDRESS_TY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ADDRESS_TY</remote-alias>
              <ordinal>0</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>29</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;`&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Z&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>4690</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>5</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ADDRFRAC</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ADDRFRAC]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ADDRFRAC</remote-alias>
              <ordinal>1</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>29</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;`&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;W&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1868</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>6</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ADDRJUR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ADDRJUR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ADDRJUR</remote-alias>
              <ordinal>2</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>20</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;CB&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;VS&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1149245</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ADDRNAME</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ADDRNAME]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ADDRNAME</remote-alias>
              <ordinal>3</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23157</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;ZUZICH&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1128072</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>11</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ADDRNMBR</remote-name>
              <remote-type>3</remote-type>
              <local-name>[ADDRNMBR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ADDRNMBR</remote-alias>
              <ordinal>4</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28980</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>700801</statistic>
                <statistic aggregation='Count' datatype='integer'>1150057</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>28</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ADDRPDIR</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ADDRPDIR]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ADDRPDIR</remote-alias>
              <ordinal>5</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;E&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;W&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>59657</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ADDRPOSTD</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ADDRPOSTD]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ADDRPOSTD</remote-alias>
              <ordinal>6</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;E&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;W&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>32300</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>3</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ADDRSFX</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ADDRSFX]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ADDRSFX</remote-alias>
              <ordinal>7</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>90</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;112&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;XING&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>991167</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>7</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ADDRUNIT</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ADDRUNIT]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ADDRUNIT</remote-alias>
              <ordinal>8</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7353</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;`&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;Z&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>189223</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>10</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ADDRZIP</remote-name>
              <remote-type>4</remote-type>
              <local-name>[ADDRZIP]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ADDRZIP</remote-alias>
              <ordinal>9</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>117</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>91901.0</statistic>
                <statistic aggregation='Max' datatype='real'>92536.0</statistic>
                <statistic aggregation='Count' datatype='integer'>1079407</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>9</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;float&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>APN</remote-name>
              <remote-type>5</remote-type>
              <local-name>[APN]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>APN</remote-alias>
              <ordinal>10</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1062991</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>4364909919373480.0</statistic>
                <statistic aggregation='Avg' datatype='real'>3853942642.0610938</statistic>
                <statistic aggregation='Min' datatype='real'>18706035.0</statistic>
                <statistic aggregation='Max' datatype='real'>7767865001.0</statistic>
                <statistic aggregation='Stdev' datatype='real'>1709616620.3024836</statistic>
                <statistic aggregation='StdevP' datatype='real'>1709615865.5600064</statistic>
                <statistic aggregation='Var' datatype='real'>2.922788988414486e+18</statistic>
                <statistic aggregation='VarP' datatype='real'>2.9227864077744901e+18</statistic>
                <statistic aggregation='Count' datatype='integer'>1132583</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>2.0132410665105362e+25</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>35</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ASOURCE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[ASOURCE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ASOURCE</remote-alias>
              <ordinal>11</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;M&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;S&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1150057</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;S&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>0</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>COMMUNITY</remote-name>
              <remote-type>129</remote-type>
              <local-name>[COMMUNITY]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>COMMUNITY</remote-alias>
              <ordinal>12</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>112</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;Aguanga&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;WARNER SPRINGS&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1104090</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>8</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_680043611209191425</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_680043611209191425]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_680043611209191425</remote-alias>
              <ordinal>13</ordinal>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49296</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;https://www.dropbox.com/s/xh9ulinsppcf07f/32.542317840999999\%2C\%20-117.036260352.jpg?dl=0&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;https://www.dropbox.com/s/xh9ulinsppcf07f/33.453212270199998\%2C\%20-117.268961033.jpg?dl=0&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>102085</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>14</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_736338605860278272</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_736338605860278272]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_736338605860278272</remote-alias>
              <ordinal>14</ordinal>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>786429</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;https://maps.googleapis.com/maps/api/streetview?size=1200x800&amp;location=32.534668943600003,-117.121048871&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;https://maps.googleapis.com/maps/api/streetview?size=1200x800&amp;location=33.5046603877,-117.441796702&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1150057</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>22</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Calculation_736338606174306307</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Calculation_736338606174306307]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Calculation_736338606174306307</remote-alias>
              <ordinal>15</ordinal>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49296</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;32.542317840999999,-117.036260352&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;33.453212270199998,-117.268961033&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>102085</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>15</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lats (copy)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Lats (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lats (copy)</remote-alias>
              <ordinal>16</ordinal>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>786317</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;32.534668943600003&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;33.5046603877&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1150057</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>20</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lon (copy)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Lon (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lon (copy)</remote-alias>
              <ordinal>17</ordinal>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>49292</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-116.18478097800001&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;-117.388677617&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>102085</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>12</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Longs (copy)</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Longs (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Longs (copy)</remote-alias>
              <ordinal>18</ordinal>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>785262</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='binary' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;-116.08212904600001&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;-117.591138427&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1150057</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;binary&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>18</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Number of Records</remote-name>
              <remote-type>16</remote-type>
              <local-name>[Number of Records]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Number of Records</remote-alias>
              <ordinal>19</ordinal>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>1150057</statistic>
                <statistic aggregation='Median' datatype='integer'>1</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PARCELID</remote-name>
              <remote-type>3</remote-type>
              <local-name>[PARCELID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PARCELID</remote-alias>
              <ordinal>20</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>737480</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>1888155397696.0</statistic>
                <statistic aggregation='Avg' datatype='real'>1641792.8830449274</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>9001471</statistic>
                <statistic aggregation='Stdev' datatype='real'>2075642.9719806358</statistic>
                <statistic aggregation='StdevP' datatype='real'>2075642.0695717016</statistic>
                <statistic aggregation='Var' datatype='real'>4308293747132.606</statistic>
                <statistic aggregation='VarP' datatype='real'>4308290000975.8965</statistic>
                <statistic aggregation='Count' datatype='integer'>1150057</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>8.0547391676724941e+18</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>30</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>PLACEMENT_</remote-name>
              <remote-type>129</remote-type>
              <local-name>[PLACEMENT_]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>PLACEMENT_</remote-alias>
              <ordinal>21</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;C&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;U&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1146570</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ROADSEGID</remote-name>
              <remote-type>3</remote-type>
              <local-name>[ROADSEGID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ROADSEGID</remote-alias>
              <ordinal>22</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>76231</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>50142209105.0</statistic>
                <statistic aggregation='Avg' datatype='real'>43599.759929290463</statistic>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>220889</statistic>
                <statistic aggregation='Stdev' datatype='real'>55565.606786284807</statistic>
                <statistic aggregation='StdevP' datatype='real'>55565.582628517463</statistic>
                <statistic aggregation='Var' datatype='real'>3087536657.5280199</statistic>
                <statistic aggregation='VarP' datatype='real'>3087533972.846602</statistic>
                <statistic aggregation='Count' datatype='integer'>1150057</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>5737028337512327.0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>29</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint32&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>STATE</remote-name>
              <remote-type>129</remote-type>
              <local-name>[STATE]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>STATE</remote-alias>
              <ordinal>23</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;CA&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;CA&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1150057</statistic>
                <statistic aggregation='Median' datatype='string'>&quot;CA&quot;</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>USNG</remote-name>
              <remote-type>129</remote-type>
              <local-name>[USNG]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>USNG</remote-alias>
              <ordinal>24</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>784268</approx-count>
              <scale>1</scale>
              <width>1073741823</width>
              <contains-null>false</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <statistics>
                <statistic aggregation='Min' datatype='string'>&quot;11S MR 88637 99710&quot;</statistic>
                <statistic aggregation='Max' datatype='string'>&quot;11S NS 85656 61657&quot;</statistic>
                <statistic aggregation='Count' datatype='integer'>1150057</statistic>
              </statistics>
              <attributes>
                <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>17</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>4</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>X_COORD</remote-name>
              <remote-type>5</remote-type>
              <local-name>[X_COORD]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>X_COORD</remote-alias>
              <ordinal>25</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>779458</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>7241584678279.7129</statistic>
                <statistic aggregation='Avg' datatype='real'>6296718.0568264993</statistic>
                <statistic aggregation='Min' datatype='real'>6152307.0</statistic>
                <statistic aggregation='Max' datatype='real'>6613087.9909499995</statistic>
                <statistic aggregation='Stdev' datatype='real'>49838.374836034389</statistic>
                <statistic aggregation='StdevP' datatype='real'>49838.353168245027</statistic>
                <statistic aggregation='Var' datatype='real'>2483863606.2970657</statistic>
                <statistic aggregation='VarP' datatype='real'>2483861446.5227189</statistic>
                <statistic aggregation='Count' datatype='integer'>1150057</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4.560107358600559e+19</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>34</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Y_COORD</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Y_COORD]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Y_COORD</remote-alias>
              <ordinal>26</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>779085</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2202719480694.6616</statistic>
                <statistic aggregation='Avg' datatype='real'>1915313.3111616743</statistic>
                <statistic aggregation='Min' datatype='real'>1775442.36375</statistic>
                <statistic aggregation='Max' datatype='real'>2129332.5311799999</statistic>
                <statistic aggregation='Stdev' datatype='real'>75645.842917171118</statistic>
                <statistic aggregation='StdevP' datatype='real'>75645.810029297136</statistic>
                <statistic aggregation='Var' datatype='real'>5722293550.6493273</statistic>
                <statistic aggregation='VarP' datatype='real'>5722288574.988512</statistic>
                <statistic aggregation='Count' datatype='integer'>1150057</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4.225478900161301e+18</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>33</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bin_graffiti</remote-name>
              <remote-type>16</remote-type>
              <local-name>[bin_graffiti]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bin_graffiti</remote-alias>
              <ordinal>27</ordinal>
              <family>opencv_output.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>0</statistic>
                <statistic aggregation='Count' datatype='integer'>4</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>23</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bin_trashcan</remote-name>
              <remote-type>16</remote-type>
              <local-name>[bin_trashcan]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bin_trashcan</remote-alias>
              <ordinal>28</ordinal>
              <family>opencv_output.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>1</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>4</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>24</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>blue</remote-name>
              <remote-type>16</remote-type>
              <local-name>[blue]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>blue</remote-alias>
              <ordinal>29</ordinal>
              <family>blue_tarps.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='integer'>0</statistic>
                <statistic aggregation='Max' datatype='integer'>1</statistic>
                <statistic aggregation='Count' datatype='integer'>102085</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>1</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>25</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;sint8&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coords.x1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[coords.x1]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coords.x1</remote-alias>
              <ordinal>30</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>778544</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>7241584678279.5244</statistic>
                <statistic aggregation='Avg' datatype='real'>6296718.0568263354</statistic>
                <statistic aggregation='Min' datatype='real'>6152307.0000499999</statistic>
                <statistic aggregation='Max' datatype='real'>6613087.99089</statistic>
                <statistic aggregation='Stdev' datatype='real'>49838.374805997249</statistic>
                <statistic aggregation='StdevP' datatype='real'>49838.353138207895</statistic>
                <statistic aggregation='Var' datatype='real'>2483863603.3030615</statistic>
                <statistic aggregation='VarP' datatype='real'>2483861443.528717</statistic>
                <statistic aggregation='Count' datatype='integer'>1150057</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4.5601073585999766e+19</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>32</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coords.x2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[coords.x2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coords.x2</remote-alias>
              <ordinal>31</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>778195</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>2202719480696.417</statistic>
                <statistic aggregation='Avg' datatype='real'>1915313.3111632005</statistic>
                <statistic aggregation='Min' datatype='real'>1775442.3637999999</statistic>
                <statistic aggregation='Max' datatype='real'>2129332.5313400002</statistic>
                <statistic aggregation='Stdev' datatype='real'>75645.842919092131</statistic>
                <statistic aggregation='StdevP' datatype='real'>75645.810031218149</statistic>
                <statistic aggregation='Var' datatype='real'>5722293550.9399605</statistic>
                <statistic aggregation='VarP' datatype='real'>5722288575.2791443</statistic>
                <statistic aggregation='Count' datatype='integer'>1150057</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>4.2254789001683604e+18</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>31</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lat (copy)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lat (copy)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lat (copy)</remote-alias>
              <ordinal>32</ordinal>
              <family>blue_tarps.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49296</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>32.542317840999999</statistic>
                <statistic aggregation='Max' datatype='real'>33.453212270199998</statistic>
                <statistic aggregation='Count' datatype='integer'>102085</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lat</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lat]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lat</remote-alias>
              <ordinal>32</ordinal>
              <family>blue_tarps.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49296</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>32.542317840999999</statistic>
                <statistic aggregation='Max' datatype='real'>33.453212270199998</statistic>
                <statistic aggregation='Count' datatype='integer'>102085</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>16</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude (opencv_output.csv)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude</remote-alias>
              <ordinal>33</ordinal>
              <family>opencv_output.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>32.686330040000001</statistic>
                <statistic aggregation='Max' datatype='real'>32.841614210000003</statistic>
                <statistic aggregation='Count' datatype='integer'>4</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>26</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>latitude1</remote-name>
              <remote-type>5</remote-type>
              <local-name>[latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>latitude1</remote-alias>
              <ordinal>34</ordinal>
              <family>littered_samples.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Count' datatype='integer'>0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lats</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lats]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lats</remote-alias>
              <ordinal>35</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>786317</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>37858782.337072037</statistic>
                <statistic aggregation='Avg' datatype='real'>32.919048653303307</statistic>
                <statistic aggregation='Min' datatype='real'>32.534668943600003</statistic>
                <statistic aggregation='Max' datatype='real'>33.5046603877</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.20751653767464576</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.20751644745451633</statistic>
                <statistic aggregation='Var' datatype='real'>0.043063113408472672</statistic>
                <statistic aggregation='VarP' datatype='real'>0.043063075964143036</statistic>
                <statistic aggregation='Count' datatype='integer'>1150057</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>1246324622.7008483</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>21</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Lon (copy 2)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Lon (copy 2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Lon (copy 2)</remote-alias>
              <ordinal>36</ordinal>
              <family>blue_tarps.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49292</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-117.388677617</statistic>
                <statistic aggregation='Max' datatype='real'>-116.18478097800001</statistic>
                <statistic aggregation='Count' datatype='integer'>102085</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>lon</remote-name>
              <remote-type>5</remote-type>
              <local-name>[lon]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>lon</remote-alias>
              <ordinal>36</ordinal>
              <family>blue_tarps.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>49292</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-117.388677617</statistic>
                <statistic aggregation='Max' datatype='real'>-116.18478097800001</statistic>
                <statistic aggregation='Count' datatype='integer'>102085</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>13</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>2</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longitude</remote-alias>
              <ordinal>37</ordinal>
              <family>opencv_output.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Min' datatype='real'>-117.17617629999999</statistic>
                <statistic aggregation='Max' datatype='real'>-116.8877397</statistic>
                <statistic aggregation='Count' datatype='integer'>4</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>27</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longs</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longs</remote-alias>
              <ordinal>38</ordinal>
              <family>For_Tableau.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>785262</approx-count>
              <contains-null>false</contains-null>
              <statistics>
                <statistic aggregation='Sum' datatype='real'>-134687245.93373168</statistic>
                <statistic aggregation='Avg' datatype='real'>-117.11353953215507</statistic>
                <statistic aggregation='Min' datatype='real'>-117.591138427</statistic>
                <statistic aggregation='Max' datatype='real'>-116.08212904600001</statistic>
                <statistic aggregation='Stdev' datatype='real'>0.16316829319731557</statistic>
                <statistic aggregation='StdevP' datatype='real'>0.16316822225808009</statistic>
                <statistic aggregation='Var' datatype='real'>0.026623891904925135</statistic>
                <statistic aggregation='VarP' datatype='real'>0.026623868754862223</statistic>
                <statistic aggregation='Count' datatype='integer'>1150057</statistic>
                <statistic aggregation='SumXSqr' datatype='real'>15773730720.103807</statistic>
              </statistics>
              <attributes>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (sort-position)'>19</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (sort-sense)'>&quot;asc&quot;</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>longtitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[longtitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>longtitude</remote-alias>
              <ordinal>39</ordinal>
              <family>littered_samples.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <statistics>
                <statistic aggregation='Count' datatype='integer'>0</statistic>
              </statistics>
              <attributes>
                <attribute datatype='boolean' name='DebugRemoteMetadata (comparable)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;array&quot;</attribute>
                <attribute datatype='boolean' name='DebugRemoteMetadata (distinct)'>true</attribute>
                <attribute datatype='string' name='DebugRemoteMetadata (ordered)'>&quot;asc&quot;</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
                <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>1</attribute>
                <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
              </attributes>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.527473' measure-ordering='alphabetic' measure-percentage='0.472527' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:blue:ok]' type='palette'>
            <map to='#499894'>
              <bucket>7</bucket>
            </map>
            <map to='#499894'>
              <bucket>76</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>23</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>3</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>30</bucket>
            </map>
            <map to='#79706e'>
              <bucket>11</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>8</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>84</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>4</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>36</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>17</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>24</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>15</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>5</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>45</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>12</bucket>
            </map>
            <map to='#d37295'>
              <bucket>13</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>16</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>18</bucket>
            </map>
            <map to='#e15759'>
              <bucket>0</bucket>
            </map>
            <map to='#e15759'>
              <bucket>9</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>6</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>50</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>25</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>14</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>10</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>27</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Hyperlink1' name='[Action1]'>
      <activation type='on-select' />
      <source dashboard='SANDAG Raw Data' type='sheet' worksheet='SANDAG_locations' />
      <link caption='' expression='&lt;[Calculation_736338605860278272]&gt;' />
    </action>
    <action caption='Hyperlink2' name='[Action2]'>
      <activation type='on-select' />
      <source dashboard='Feature Results: Blue Tarp' type='sheet' worksheet='Blue_Tarp' />
      <link caption='' expression='&lt;[Calculation_736338605860278272]&gt;' />
    </action>
    <action caption='Highlight 1 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Feature Results: Blue Tarp' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='ATTR(Blue)' />
        <param name='target' value='Feature Results: Blue Tarp' />
      </command>
    </action>
    <datasources>
      <datasource caption='For_Tableau' name='federated.0zslbn10zexr0o1cdrm5f005rkda' />
    </datasources>
    <datasource-dependencies datasource='federated.0zslbn10zexr0o1cdrm5f005rkda'>
      <column caption='Street View URL' datatype='string' name='[Calculation_736338605860278272]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='&quot;https://maps.googleapis.com/maps/api/streetview?size=1200x800&amp;location=&quot;+STR([lats])+&quot;,&quot;+STR([longs])' />
      </column>
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='Blue_Tarp'>
      <table>
        <view>
          <datasources>
            <datasource caption='For_Tableau' name='federated.0zslbn10zexr0o1cdrm5f005rkda' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zslbn10zexr0o1cdrm5f005rkda'>
            <column caption='Addrzip' datatype='real' default-format='*00000' name='[ADDRZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column caption='Street View URL' datatype='string' name='[Calculation_736338605860278272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;https://maps.googleapis.com/maps/api/streetview?size=1200x800&amp;location=&quot;+STR([lats])+&quot;,&quot;+STR([longs])' />
            </column>
            <column caption='Lats Filter' datatype='string' datatype-customized='true' name='[Lats (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([lats])' />
            </column>
            <column caption='Lon_exclude' datatype='string' datatype-customized='true' name='[Lon (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([lon])' />
            </column>
            <column caption='Longs Filter' datatype='string' datatype-customized='true' name='[Longs (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([longs])' />
            </column>
            <column-instance column='[ADDRZIP]' derivation='Attribute' name='[attr:ADDRZIP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[blue]' derivation='Attribute' name='[attr:blue:ok]' pivot='key' type='ordinal' />
            <column-instance column='[lat]' derivation='Attribute' name='[attr:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lon]' derivation='Attribute' name='[attr:lon:qk]' pivot='key' type='quantitative' />
            <column caption='Blue' datatype='integer' name='[blue]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Lats' datatype='real' name='[lats]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Lon' datatype='real' name='[lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longs' datatype='real' name='[longs]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[ADDRZIP]' derivation='None' name='[none:ADDRZIP:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_736338605860278272]' derivation='None' name='[none:Calculation_736338605860278272:nk]' pivot='key' type='nominal' />
            <column-instance column='[Lats (copy)]' derivation='None' name='[none:Lats (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Lon (copy)]' derivation='None' name='[none:Lon (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Longs (copy)]' derivation='None' name='[none:Longs (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[blue]' derivation='None' name='[none:blue:ok]' pivot='key' type='ordinal' />
            <column-instance column='[lat]' derivation='None' name='[none:lat:qk]' pivot='key' type='quantitative' />
            <column-instance column='[lon]' derivation='None' name='[none:lon:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:ADDRZIP:ok]' filter-group='4'>
            <groupfilter function='member' level='[none:ADDRZIP:ok]' member='91901.0' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Lats (copy):nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Lats (copy):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Lon (copy):nk]' filter-group='5'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Lon (copy):nk]' />
              <groupfilter function='member' level='[none:Lon (copy):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Longs (copy):nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Longs (copy):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:blue:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:blue:ok]' member='0' />
              <groupfilter function='member' level='[none:blue:ok]' member='1' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:blue:ok]</column>
            <column>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Lon (copy):nk]</column>
            <column>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:ADDRZIP:ok]</column>
            <column>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Lats (copy):nk]</column>
            <column>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Longs (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-pattern-only' value='dashed' />
            <format attr='line-visibility' value='off' />
            <encoding attr='space' class='0' field='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:lon:qk]' field-type='quantitative' max='-12818047.055207087' min='-13244454.298435671' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:lat:qk]' field-type='quantitative' max='3978501.0366925388' min='3780188.9797906582' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0zslbn10zexr0o1cdrm5f005rkda].[attr:blue:ok]' value='Blue Tarp (-/+)'>
              <formatted-text>
                <run fontalignment='1'>Blue Tarp (-/+)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='true' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='true' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#f5f5f5' />
            <format attr='title' field='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:ADDRZIP:ok]' value='   Choose SD Zip Code(s) of Interest'>
              <formatted-text>
                <run>   Choose SD Zip Code(s) of Interest</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[attr:blue:ok]' />
              <lod column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Calculation_736338605860278272:nk]' />
              <tooltip column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[attr:ADDRZIP:qk]' />
              <tooltip column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[attr:lon:qk]' />
              <tooltip column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[attr:lat:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Lats:&#9;&lt;[federated.0zslbn10zexr0o1cdrm5f005rkda].[attr:lat:qk]&gt;&#10;Longs:&#9;</run>
                <run bold='true' fontcolor='#787878'>&lt;[federated.0zslbn10zexr0o1cdrm5f005rkda].[attr:lon:qk]&gt;&#10;ZipCode: &lt;[federated.0zslbn10zexr0o1cdrm5f005rkda].[attr:ADDRZIP:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='down-triangle' />
                <format attr='size' value='0.55972373485565186' />
                <format attr='mark-color' value='#0000ff' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#00007f' />
                <format attr='mark-transparency' value='129' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:lat:qk]</rows>
        <cols>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:lon:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Blue_Tarp_Distribution'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='10'>Normalized Distribution of Blue Tarp Across San Diego</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='For_Tableau' name='federated.0zslbn10zexr0o1cdrm5f005rkda' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zslbn10zexr0o1cdrm5f005rkda'>
            <column caption='Addrzip' datatype='real' default-format='*00000' name='[ADDRZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column caption='Blue == 1 per Zipcode' datatype='real' name='[Calculation_680043611213959170]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{FIXED [ADDRZIP]: SUM([blue])/(SUM([Number of Records]))}' />
            </column>
            <column caption='Lon_exclude' datatype='string' datatype-customized='true' name='[Lon (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([lon])' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Blue' datatype='integer' name='[blue]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Lon' datatype='real' name='[lon]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[ADDRZIP]' derivation='None' name='[none:ADDRZIP:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Lon (copy)]' derivation='None' name='[none:Lon (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[blue]' derivation='None' name='[none:blue:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_680043611213959170]' derivation='Sum' name='[sum:Calculation_680043611213959170:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Lon (copy):nk]' filter-group='5'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Lon (copy):nk]' />
              <groupfilter function='member' level='[none:Lon (copy):nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:blue:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:blue:ok]' member='0' />
              <groupfilter function='member' level='[none:blue:ok]' member='1' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:blue:ok]</column>
            <column>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Lon (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='line-pattern-only' value='dashed' />
            <format attr='line-visibility' value='off' />
            <encoding attr='space' class='0' field='[federated.0zslbn10zexr0o1cdrm5f005rkda].[Longitude (generated)]' field-type='quantitative' max='-12862948.261852728' min='-13221285.050453635' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0zslbn10zexr0o1cdrm5f005rkda].[Latitude (generated)]' field-type='quantitative' max='3982472.8694349793' min='3802692.978908245' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0zslbn10zexr0o1cdrm5f005rkda].[sum:Calculation_680043611213959170:qk]' num-steps='4' palette='blue_teal_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0zslbn10zexr0o1cdrm5f005rkda].[sum:Calculation_680043611213959170:qk]' value='Ranking (1 = Light - 4 = Dark)'>
              <formatted-text>
                <run fontsize='8'>Ranking (1 = Light - 4 = Dark)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='true' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='true' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#f5f5f5' />
            <format attr='title' field='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:ADDRZIP:ok]' value='   Choose SD Zip Code(s) of Interest'>
              <formatted-text>
                <run>   Choose SD Zip Code(s) of Interest</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:ADDRZIP:ok]' />
              <color column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[sum:Calculation_680043611213959170:qk]' />
              <geometry column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zslbn10zexr0o1cdrm5f005rkda].[Latitude (generated)]</rows>
        <cols>[federated.0zslbn10zexr0o1cdrm5f005rkda].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='SANDAG_#records'>
      <table>
        <view>
          <datasources>
            <datasource caption='For_Tableau' name='federated.0zslbn10zexr0o1cdrm5f005rkda' />
          </datasources>
          <datasource-dependencies datasource='federated.0zslbn10zexr0o1cdrm5f005rkda'>
            <column caption='Addrzip' datatype='real' default-format='*00000' name='[ADDRZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column caption='Lats Filter' datatype='string' datatype-customized='true' name='[Lats (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([lats])' />
            </column>
            <column caption='Longs Filter' datatype='string' datatype-customized='true' name='[Longs (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([longs])' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Avg' caption='Lats' datatype='real' name='[lats]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longs' datatype='real' name='[longs]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[ADDRZIP]' derivation='None' name='[none:ADDRZIP:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Lats (copy)]' derivation='None' name='[none:Lats (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Longs (copy)]' derivation='None' name='[none:Longs (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:ADDRZIP:ok]' filter-group='4'>
            <groupfilter function='member' level='[none:ADDRZIP:ok]' member='91901.0' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Lats (copy):nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Lats (copy):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Longs (copy):nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Longs (copy):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:ADDRZIP:ok]</column>
            <column>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Lats (copy):nk]</column>
            <column>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Longs (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[sum:Number of Records:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true'>There are  </run>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.0zslbn10zexr0o1cdrm5f005rkda].[sum:Number of Records:qk]</run>
                <run bold='true'>&gt;</run>
                <run bold='true'> SANDAG data points in the area(s) of interest.</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
    </worksheet>
    <worksheet name='SANDAG_locations'>
      <table>
        <view>
          <datasources>
            <datasource caption='For_Tableau' name='federated.0zslbn10zexr0o1cdrm5f005rkda' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zslbn10zexr0o1cdrm5f005rkda'>
            <column caption='Addrzip' datatype='real' default-format='*00000' name='[ADDRZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column caption='Street View URL' datatype='string' name='[Calculation_736338605860278272]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='&quot;https://maps.googleapis.com/maps/api/streetview?size=1200x800&amp;location=&quot;+STR([lats])+&quot;,&quot;+STR([longs])' />
            </column>
            <column caption='Lats Filter' datatype='string' datatype-customized='true' name='[Lats (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([lats])' />
            </column>
            <column caption='Longs Filter' datatype='string' datatype-customized='true' name='[Longs (copy)]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='STR([longs])' />
            </column>
            <column aggregation='Avg' caption='Lats' datatype='real' name='[lats]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longs' datatype='real' name='[longs]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[ADDRZIP]' derivation='None' name='[none:ADDRZIP:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_736338605860278272]' derivation='None' name='[none:Calculation_736338605860278272:nk]' pivot='key' type='nominal' />
            <column-instance column='[Lats (copy)]' derivation='None' name='[none:Lats (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Longs (copy)]' derivation='None' name='[none:Longs (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[lats]' derivation='None' name='[none:lats:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longs]' derivation='None' name='[none:longs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:ADDRZIP:ok]' filter-group='4'>
            <groupfilter function='member' level='[none:ADDRZIP:ok]' member='91901.0' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Lats (copy):nk]' filter-group='7'>
            <groupfilter function='level-members' level='[none:Lats (copy):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Longs (copy):nk]' filter-group='3'>
            <groupfilter function='level-members' level='[none:Longs (copy):nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:ADDRZIP:ok]</column>
            <column>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Lats (copy):nk]</column>
            <column>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Longs (copy):nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:longs:qk]' field-type='quantitative' max='-12900384.646637695' min='-13097700.463823812' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:lats:qk]' field-type='quantitative' max='3967904.9089651587' min='3813045.5911426092' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <format attr='line-pattern-only' value='dashed' />
            <format attr='line-visibility' value='off' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='line-visibility' value='on' />
            <format attr='line-pattern-only' value='solid' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='false' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='true' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='false' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='true' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='true' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='' />
            <format attr='wrap' value='false' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:ADDRZIP:ok]' value='   Choose SD Zip Code(s) of Interest'>
              <formatted-text>
                <run>   Choose SD Zip Code(s) of Interest</run>
              </formatted-text>
            </format>
            <format attr='background-color' value='#f5f5f5' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Calculation_736338605860278272:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Lats:&#9;</run>
                <run bold='true'>&lt;[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:lats:qk]&gt;</run>
                <run fontcolor='#787878'>&#10;Longs:&#9;</run>
                <run bold='true'>&lt;[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:longs:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/down-triangle' />
                <format attr='size' value='0.55972373485565186' />
                <format attr='mark-color' value='#0000ff' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#00007f' />
                <format attr='mark-transparency' value='27' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:lats:qk]</rows>
        <cols>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:longs:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Approach Pt. 1'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='26' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='25' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/d3TjUpj.jpg' type='bitmap' w='100000' x='0' y='0' />
        </zone>
        <zone forceUpdate='true' h='7161' id='3' type='text' w='92679' x='3587' y='2083'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='24'>Approach: Set Up</run>
          </formatted-text>
        </zone>
        <zone h='10156' id='5' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/Sandag_LOGO.png' type='bitmap' w='17204' x='17789' y='21745' />
        <zone forceUpdate='true' h='7031' id='11' type='text' w='21010' x='17057' y='12891'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='18'>Data Processing</run>
          </formatted-text>
        </zone>
        <zone h='23828' id='13' is-centered='0' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/2000px-Python.svg.png' type='bitmap' w='14275' x='11933' y='42578' />
        <zone forceUpdate='true' h='7943' id='15' type='text' w='20937' x='66398' y='12500'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='18'>Data Visualization</run>
          </formatted-text>
        </zone>
        <zone h='20833' id='16' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/git_squid_cat.png' type='bitmap' w='13177' x='19839' y='67318' />
        <zone h='25781' id='18' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/HTML_Logo.png' type='bitmap' w='15227' x='78184' y='22656' />
        <zone h='9896' id='20' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/down_filled1600.png' type='bitmap' w='5490' x='23646' y='32031' />
        <zone forceUpdate='true' h='6250' id='21' type='text' w='39092' x='8858' y='89714'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='12'>SD Address shapefiles to latitude, longitude.</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='11589' id='23' type='text' w='42753' x='52709' y='86198'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='12'>Tableau dashboards embedded in .html allows for user iteraction with the data. User input will assist in determining our model&apos;s accuracy performance metrics.</run>
          </formatted-text>
        </zone>
        <zone h='33854' id='24' is-centered='0' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/23ed2ca39890516ef9e6b3eb3d825a46.png' type='bitmap' w='36750' x='56589' y='50781' />
        <zone h='26042' id='27' is-centered='0' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/tableau-icon (1).png' type='bitmap' w='14641' x='60542' y='22656' />
        <zone h='20573' id='28' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/RStudio-Logo-Blue-Gradient.png' type='bitmap' w='21083' x='26061' y='43490' />
      </zones>
    </dashboard>
    <dashboard name='Approach Pt. 2'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='26' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='25' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/d3TjUpj.jpg' type='bitmap' w='100000' x='0' y='0' />
        </zone>
        <zone forceUpdate='true' h='7161' id='3' type='text' w='92679' x='3587' y='2083'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='24'>Approach: Machine Learning</run>
          </formatted-text>
        </zone>
        <zone h='43880' id='4' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/graffiti_detected.png' type='bitmap' w='24451' x='44729' y='51432' />
        <zone h='43620' id='6' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/32.749323993, -117.117736135.png' type='bitmap' w='25769' x='70498' y='51563' />
        <zone h='37370' id='7' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/plot.jpg' type='bitmap' w='24671' x='44363' y='11068' />
        <zone h='40755' id='8' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/32.743073, -117.1064124.jpg' type='bitmap' w='25329' x='70717' y='9245' />
        <zone h='16016' id='9' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/pil_pic.png' type='bitmap' w='9736' x='33089' y='29297' />
        <zone h='18229' id='10' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/opencv-logo2.png' type='bitmap' w='10761' x='33089' y='61719' />
        <zone forceUpdate='true' h='60026' id='22' type='text' w='23865' x='5417' y='23698'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='18'>Image Processing and Litter Classification</run>
            <run bold='true' fontcolor='#ffffff' fontsize='14'>&#10;&#10;PIL was used for pixel normalization, segmentation, and blue tarp RGB/HSV identification. OpenCV was used for graffiti and trash/recycling bin shape identification. These features were used to classify images as littered or not littered.</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Contributor&apos;s Information'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='19' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='18' is-centered='0' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/d3TjUpj.jpg' type='bitmap' w='100000' x='0' y='0' />
        </zone>
        <zone forceUpdate='true' h='23828' id='3' type='text' w='39019' x='13982' y='5729'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='16'>Waste Bots Unleashed                               </run>
            <run bold='true' fontcolor='#ffffff' fontsize='14' italic='true'>&#10;Cleaning Up Litter. One Data Point at a Time.</run>
            <run bold='true' fontcolor='#ffffff' fontsize='16'>Æ&#10;</run>
            <run bold='true' fontcolor='#ffffff' fontsize='12'>&#10;Visit our GitHub for detailed information regarding how the data was extracted, processed, analyzed, and visualized. </run>
          </formatted-text>
        </zone>
        <zone h='34245' id='4' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/Jill.jpg' type='bitmap' w='15300' x='12518' y='36719' />
        <zone h='34635' id='5' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/Lauren.png' type='bitmap' w='10688' x='45754' y='36979' />
        <zone h='34766' id='6' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/Orysya.jpg' type='bitmap' w='14422' x='72694' y='37500' />
        <zone forceUpdate='true' h='5339' id='7' type='text' w='15373' x='12518' y='70703'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='12'>Jillian Jarrett</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='3906' id='8' type='text' w='10835' x='45754' y='71484'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='12'>Lauren Coden</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='3906' id='9' type='text' w='12958' x='73499' y='72396'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='12'>Orysya Stus</run>
          </formatted-text>
        </zone>
        <zone h='16927' id='10' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/git_squid_cat.png' type='bitmap' url='https://github.com/wastebotsunleased/wastebotsunleased.github.io' w='10469' x='2709' y='7031' />
        <zone h='12630' id='11' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/linkedin-512.png' type='bitmap' url='https://www.linkedin.com/in/orysyastus/' w='6955' x='73206' y='76563' />
        <zone h='12500' id='12' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/linkedin-512.png' type='bitmap' url='https://www.linkedin.com/in/lauren-coden-301b9727/' w='7540' x='43704' y='75391' />
        <zone h='12630' id='13' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/linkedin-512.png' type='bitmap' url='https://www.linkedin.com/in/jillianjarrett/' w='8419' x='11493' y='75000' />
        <zone h='12891' id='14' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/git_squid_cat.png' type='bitmap' url='https://github.com/mas-dse-jejarret' w='7687' x='19839' y='75260' />
        <zone h='13151' id='15' is-centered='0' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/git_squid_cat.png' type='bitmap' url='https://github.com/mas-dse/lcoden' w='7687' x='51684' y='75260' />
        <zone h='13672' id='16' is-centered='0' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/git_squid_cat.png' type='bitmap' url='https://github.com/OrysyaStus' w='8272' x='80893' y='76042' />
        <zone h='29036' id='17' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/team_photo_faces.png' type='bitmap' w='42167' x='55271' y='2995' />
      </zones>
    </dashboard>
    <dashboard name='Feature Results: Blue Tarp'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='For_Tableau' name='federated.0zslbn10zexr0o1cdrm5f005rkda' />
      </datasources>
      <datasource-dependencies datasource='federated.0zslbn10zexr0o1cdrm5f005rkda'>
        <column caption='Addrzip' datatype='real' default-format='*00000' name='[ADDRZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
        <column-instance column='[ADDRZIP]' derivation='None' name='[none:ADDRZIP:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='18' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='17' is-centered='0' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/d3TjUpj.jpg' type='bitmap' w='100000' x='0' y='0' />
        </zone>
        <zone forceUpdate='true' h='10938' id='9' type='text' w='98316' x='659' y='911'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='14'>Feature: Blue Tarp Distribution (Pixel Recognition)</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>&#10;Visually see the distribution of blue tarp (litter marker) across San Diego. Choose the SD zip code(s) of interest and click on a location to view the corresponding Google Street View image. Help the effort and contribute to optimizing our models.</run>
          </formatted-text>
        </zone>
        <zone h='35677' id='11' name='Blue_Tarp' show-title='false' w='43045' x='4319' y='62630' />
        <zone h='8333' id='12' name='Blue_Tarp' pane-specification-id='0' param='[federated.0zslbn10zexr0o1cdrm5f005rkda].[attr:blue:ok]' type='color' w='10249' x='4905' y='86328' />
        <zone h='6380' id='13' mode='checkdropdown' name='Blue_Tarp' param='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:ADDRZIP:ok]' show-apply='true' type='filter' values='relevant' w='22474' x='4319' y='56380' />
        <zone forceUpdate='' h='33203' id='14' param='https://docs.google.com/forms/d/e/1FAIpQLSdvnBxnBkZMqYnvxIcoKjkc8vGaH7JuF264FC4O_fU1RCC3XQ/viewform?c=0&amp;w=1' type='web' w='42020' x='54173' y='62240' />
        <zone h='43490' id='15' name='Blue_Tarp_Distribution' w='42972' x='4319' y='11719' />
        <zone h='7422' id='16' name='Blue_Tarp_Distribution' pane-specification-id='0' param='[federated.0zslbn10zexr0o1cdrm5f005rkda].[sum:Calculation_680043611213959170:qk]' type='color' w='17423' x='4758' y='45313' />
        <zone forceUpdate='' h='47656' id='5' param='about:blank' type='web' w='36310' x='56881' y='11849' />
      </zones>
    </dashboard>
    <dashboard name='Further Steps'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='16' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='15' is-centered='0' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/d3TjUpj.jpg' type='bitmap' w='100000' x='0' y='0' />
        </zone>
        <zone forceUpdate='true' h='8984' id='3' type='text' w='58053' x='805' y='1953'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='14'>Crowdsourcing Performance Metrics for Model Parameter Tuning</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='8464' id='4' type='text' w='35578' x='61567' y='2214'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='14'>Utilizing Neural Networks to Identify Litter</run>
          </formatted-text>
        </zone>
        <zone h='41536' id='7' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/tikz11.png' type='bitmap' w='34553' x='62079' y='10026' />
        <zone h='21484' id='9' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/canstockphoto12241921.jpg' type='bitmap' w='12884' x='9517' y='51042' />
        <zone h='20833' id='10' is-centered='0' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/confusionmatrix.png' type='bitmap' w='15593' x='8419' y='74089' />
        <zone h='8203' id='11' is-centered='0' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/tensor-flow_opengraph_h.png' type='bitmap' w='23353' x='67570' y='48438' />
        <zone h='37630' id='12' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/Capture.PNG' type='bitmap' w='37921' x='60176' y='57552' />
        <zone h='79297' id='13' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/googledoc.PNG' type='bitmap' w='23939' x='30015' y='13021' />
        <zone forceUpdate='true' h='37500' id='14' type='text' w='19034' x='6076' y='10938'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff'>More Feature Selection for Classification:&#10;</run>
            <run bold='true' fontcolor='#ffffff'>&#10;Blue Tarp&#10;Trashcans&#10;Graffiti&#10;Water bottle&#10;Soda can&#10;Plastic bag&#10;Boarded-up window&#10;Tents&#10;Mattresses&#10;Cardboard boxes</run>
          </formatted-text>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Overview'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='1' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/dirty-beach.jpg' type='bitmap' w='100000' x='0' y='0' />
        </zone>
        <zone forceUpdate='true' h='13021' id='3' type='text' w='92606' x='3441' y='76172'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Tableau Regular' fontsize='24'>Waste Bots Unleashed</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='14' italic='true'>&#10;Cleaning Up Litter. One Data Point at a Time.</run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='30990' id='4' type='text' w='41947' x='4978' y='1042'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='12' lmargin='300'>To Inspire and Educate the Public&#10;</run>
            <run fontcolor='#000000' lmargin='300'>&#10;Keep America Beautiful inspires and educates people to take action every day to improve and beautify their community environment. Established in 1953, Keep America Beautiful is a leading national nonprofit organization that provides the expertise, programs and resources to help people end littering, improve recycling, and beautify communities. The organization is driven by the work and passion of more than 620 community-based affiliates, millions of volunteers, and the support of corporate partners, municipalities, elected officials, and individuals.  </run>
          </formatted-text>
        </zone>
        <zone forceUpdate='true' h='30729' id='6' type='text' w='45461' x='49268' y='1563'>
          <formatted-text>
            <run bold='true' fontcolor='#000000' fontsize='12'>Challenge: Identification and Coding of Litter</run>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontsize='12'>Æ&#10;</run>
            <run fontcolor='#000000' lmargin='300'>&#10;An important step toward Keeping America Beautiful is to identify problems and educate the public about them. For this challenge, each team is asked to design and develop a software application that can take advantage of current computing technology to help code the varying levels of litter (1=no litter, 2=slightly littered, 3=littered, 4=extremely) in a community using images from Google Streets, and to create a local and national measure of litter. Each team is invited to think through the process of collecting, reviewing, and coding images, the organization of images, and the strategies to engage broader participation from local residents. </run>
          </formatted-text>
        </zone>
        <zone h='4818' id='7' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/keepamericabeautiful_logo.png' type='bitmap' url='https://www.kab.org/' w='14641' x='29649' y='2214' />
        <zone h='7813' id='5' is-centered='0' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/womenshackathon_logo.png' type='bitmap' url='http://sandiegohackathon.org/us/san-diego-womens-hackathon--csusm?per_row[3306371]=4' w='13177' x='80307' y='1432' />
        <zone h='9896' id='8' is-centered='0' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/git_squid_cat.png' type='bitmap' url='https://github.com/wastebotsunleased/wastebotsunleased.github.io' w='5417' x='45681' y='88151' />
      </zones>
    </dashboard>
    <dashboard name='SANDAG Raw Data'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='For_Tableau' name='federated.0zslbn10zexr0o1cdrm5f005rkda' />
      </datasources>
      <datasource-dependencies datasource='federated.0zslbn10zexr0o1cdrm5f005rkda'>
        <column caption='Addrzip' datatype='real' default-format='*00000' name='[ADDRZIP]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
        <column-instance column='[ADDRZIP]' derivation='None' name='[none:ADDRZIP:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='12' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='11' is-centered='0' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/d3TjUpj.jpg' type='bitmap' w='100000' x='0' y='0' />
        </zone>
        <zone h='66146' id='4' name='SANDAG_locations' show-title='false' w='47365' x='2123' y='30729' />
        <zone h='7682' id='6' mode='checkdropdown' name='SANDAG_locations' param='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:ADDRZIP:ok]' show-apply='true' type='filter' values='relevant' w='18960' x='2269' y='21615' />
        <zone h='8333' id='8' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/Sandag_LOGO.png' type='bitmap' url='http://rdw.sandag.org/Account/gisdtview?dir=Address' w='8858' x='2050' y='2474' />
        <zone forceUpdate='true' h='18229' id='9' type='text' w='86896' x='11347' y='2865'>
          <formatted-text>
            <run bold='true' fontcolor='#ffffff' fontsize='10'>SANDAG GIS address shape files was downloaded (1,150,057 total data points). R&apos;s ggmaps and Python&apos;s stateplane was used to extract and convert each data point into their associated latitude and longitude. Google Street View image data was collected for ~5% (49,295 random data points) of the total SANDAG data for further image processing and litter classification.&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='11'>&#10;Choose the SD zip code(s) of interest and click on a location to view the corresponding Google Street View image.</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='8'>&#10;Note: Not all latitudes, longitude pairings will have Google Street Views associated with them.</run>
          </formatted-text>
        </zone>
        <zone h='7943' id='10' is-scaled='1' param='C:/Users/Orysya/Desktop/Women_Hackathon/Data_Potential_LongLats/Addresses/WasteBotsUnleashed.twb Files/Image/googlestreetview.png' type='bitmap' url='https://www.google.com/streetview/' w='6662' x='3001' y='10156' />
        <zone h='7682' id='7' name='SANDAG_#records' show-title='false' w='28404' x='21230' y='21615' />
        <zone forceUpdate='' h='75521' id='5' param='about:blank' type='web' w='47072' x='50805' y='21484' />
      </zones>
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='dashboard' maximized='true' name='Overview'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='dashboard' name='Approach Pt. 1'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='dashboard' name='Approach Pt. 2'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='dashboard' name='SANDAG Raw Data'>
      <viewpoints>
        <viewpoint name='SANDAG_#records'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='SANDAG_locations'>
          <zoom type='entire-view' />
          <map-scale-visibility value='0' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='4' />
    </window>
    <window class='dashboard' name='Feature Results: Blue Tarp'>
      <viewpoints>
        <viewpoint name='Blue_Tarp'>
          <zoom type='entire-view' />
          <highlight field='[federated.0zslbn10zexr0o1cdrm5f005rkda].[attr:blue:ok]'>
            <bucket-selection />
          </highlight>
          <map-scale-visibility value='0' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Blue_Tarp_Distribution'>
          <zoom type='entire-view' />
          <map-scale-visibility value='0' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
    </window>
    <window class='dashboard' name='Further Steps'>
      <viewpoints />
      <active id='15' />
    </window>
    <window class='dashboard' name='Contributor&apos;s Information'>
      <viewpoints />
      <active id='-1' />
    </window>
    <window class='worksheet' hidden='true' name='Blue_Tarp'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zslbn10zexr0o1cdrm5f005rkda].[attr:blue:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[attr:blue:ok]</field>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:ADDRZIP:ok]</field>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Calculation_736338605860278272:nk]</field>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Lat (copy):qk]</field>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Lats (copy):nk]</field>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Lon (copy):nk]</field>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Longs (copy):nk]</field>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:lat:qk]</field>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:lats:qk]</field>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:lon:qk]</field>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:longs:qk]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='2' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='Blue_Tarp_Distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zslbn10zexr0o1cdrm5f005rkda].[sum:Calculation_680043611213959170:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[attr:blue:ok]</field>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:ADDRZIP:ok]</field>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Calculation_736338605860278272:nk]</field>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Lat (copy):qk]</field>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Lon (copy):nk]</field>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:lat:qk]</field>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:lats:qk]</field>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:lon:qk]</field>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:longs:qk]</field>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[sum:Calculation_680043611213959170:qk]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='SANDAG_#records'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:ADDRZIP:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' hidden='true' name='SANDAG_locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Longs (copy):nk]' type='filter' />
            <card param='[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Lats (copy):nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:ADDRZIP:ok]</field>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:Calculation_736338605860278272:nk]</field>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:lats:qk]</field>
            <field>[federated.0zslbn10zexr0o1cdrm5f005rkda].[none:longs:qk]</field>
          </color-one-way>
        </highlight>
        <map-scale-visibility value='0' />
        <default-map-tool-selection tool='1' />
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Approach Pt. 1' width='192'>
      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
      gPFfWxdao3malmAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Approach Pt. 2' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Contributor&apos;s Information' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Feature Results: Blue Tarp' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Further Steps' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Overview' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='SANDAG Raw Data' width='192'>
      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
      DFbYfQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
